/* Auto-generated by genmsg_cpp for file /home/puppeteer/ros/command_msgs/srv/position_request.srv */
#ifndef COMMAND_MSGS_SERVICE_POSITION_REQUEST_H
#define COMMAND_MSGS_SERVICE_POSITION_REQUEST_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace command_msgs
{
template <class ContainerAllocator>
struct position_requestRequest_ : public ros::Message
{
  typedef position_requestRequest_<ContainerAllocator> Type;

  position_requestRequest_()
  : robot_index(0)
  , type(0)
  , Vleft(0.0)
  , Vright(0.0)
  , Vtop(0.0)
  , div(0)
  {
  }

  position_requestRequest_(const ContainerAllocator& _alloc)
  : robot_index(0)
  , type(0)
  , Vleft(0.0)
  , Vright(0.0)
  , Vtop(0.0)
  , div(0)
  {
  }

  typedef int32_t _robot_index_type;
  int32_t robot_index;

  typedef uint8_t _type_type;
  uint8_t type;

  typedef float _Vleft_type;
  float Vleft;

  typedef float _Vright_type;
  float Vright;

  typedef float _Vtop_type;
  float Vtop;

  typedef int32_t _div_type;
  int32_t div;


private:
  static const char* __s_getDataType_() { return "command_msgs/position_requestRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "e347a3628b1c0f3e9df84fb46b6a66b3"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "44784249bb38d42eeaab1675c1e520a3"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int32 robot_index\n\
char type\n\
float32 Vleft\n\
float32 Vright\n\
float32 Vtop\n\
int32 div\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, robot_index);
    ros::serialization::serialize(stream, type);
    ros::serialization::serialize(stream, Vleft);
    ros::serialization::serialize(stream, Vright);
    ros::serialization::serialize(stream, Vtop);
    ros::serialization::serialize(stream, div);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, robot_index);
    ros::serialization::deserialize(stream, type);
    ros::serialization::deserialize(stream, Vleft);
    ros::serialization::deserialize(stream, Vright);
    ros::serialization::deserialize(stream, Vtop);
    ros::serialization::deserialize(stream, div);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(robot_index);
    size += ros::serialization::serializationLength(type);
    size += ros::serialization::serializationLength(Vleft);
    size += ros::serialization::serializationLength(Vright);
    size += ros::serialization::serializationLength(Vtop);
    size += ros::serialization::serializationLength(div);
    return size;
  }

  typedef boost::shared_ptr< ::command_msgs::position_requestRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::command_msgs::position_requestRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct position_requestRequest
typedef  ::command_msgs::position_requestRequest_<std::allocator<void> > position_requestRequest;

typedef boost::shared_ptr< ::command_msgs::position_requestRequest> position_requestRequestPtr;
typedef boost::shared_ptr< ::command_msgs::position_requestRequest const> position_requestRequestConstPtr;


template <class ContainerAllocator>
struct position_requestResponse_ : public ros::Message
{
  typedef position_requestResponse_<ContainerAllocator> Type;

  position_requestResponse_()
  : xc(0.0)
  , zc(0.0)
  , th(0.0)
  , error(false)
  {
  }

  position_requestResponse_(const ContainerAllocator& _alloc)
  : xc(0.0)
  , zc(0.0)
  , th(0.0)
  , error(false)
  {
  }

  typedef float _xc_type;
  float xc;

  typedef float _zc_type;
  float zc;

  typedef float _th_type;
  float th;

  typedef uint8_t _error_type;
  uint8_t error;


private:
  static const char* __s_getDataType_() { return "command_msgs/position_requestResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "1d0bd3c5349abcb6d528d00e46ceb03e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "44784249bb38d42eeaab1675c1e520a3"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "float32 xc\n\
float32 zc\n\
float32 th\n\
bool error\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, xc);
    ros::serialization::serialize(stream, zc);
    ros::serialization::serialize(stream, th);
    ros::serialization::serialize(stream, error);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, xc);
    ros::serialization::deserialize(stream, zc);
    ros::serialization::deserialize(stream, th);
    ros::serialization::deserialize(stream, error);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(xc);
    size += ros::serialization::serializationLength(zc);
    size += ros::serialization::serializationLength(th);
    size += ros::serialization::serializationLength(error);
    return size;
  }

  typedef boost::shared_ptr< ::command_msgs::position_requestResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::command_msgs::position_requestResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct position_requestResponse
typedef  ::command_msgs::position_requestResponse_<std::allocator<void> > position_requestResponse;

typedef boost::shared_ptr< ::command_msgs::position_requestResponse> position_requestResponsePtr;
typedef boost::shared_ptr< ::command_msgs::position_requestResponse const> position_requestResponseConstPtr;

struct position_request
{

typedef position_requestRequest Request;
typedef position_requestResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct position_request
} // namespace command_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::command_msgs::position_requestRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e347a3628b1c0f3e9df84fb46b6a66b3";
  }

  static const char* value(const  ::command_msgs::position_requestRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe347a3628b1c0f3eULL;
  static const uint64_t static_value2 = 0x9df84fb46b6a66b3ULL;
};

template<class ContainerAllocator>
struct DataType< ::command_msgs::position_requestRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "command_msgs/position_requestRequest";
  }

  static const char* value(const  ::command_msgs::position_requestRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::command_msgs::position_requestRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 robot_index\n\
char type\n\
float32 Vleft\n\
float32 Vright\n\
float32 Vtop\n\
int32 div\n\
\n\
";
  }

  static const char* value(const  ::command_msgs::position_requestRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::command_msgs::position_requestRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::command_msgs::position_requestResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1d0bd3c5349abcb6d528d00e46ceb03e";
  }

  static const char* value(const  ::command_msgs::position_requestResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1d0bd3c5349abcb6ULL;
  static const uint64_t static_value2 = 0xd528d00e46ceb03eULL;
};

template<class ContainerAllocator>
struct DataType< ::command_msgs::position_requestResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "command_msgs/position_requestResponse";
  }

  static const char* value(const  ::command_msgs::position_requestResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::command_msgs::position_requestResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 xc\n\
float32 zc\n\
float32 th\n\
bool error\n\
\n\
\n\
";
  }

  static const char* value(const  ::command_msgs::position_requestResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::command_msgs::position_requestResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::command_msgs::position_requestRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.robot_index);
    stream.next(m.type);
    stream.next(m.Vleft);
    stream.next(m.Vright);
    stream.next(m.Vtop);
    stream.next(m.div);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct position_requestRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::command_msgs::position_requestResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.xc);
    stream.next(m.zc);
    stream.next(m.th);
    stream.next(m.error);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct position_requestResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<command_msgs::position_request> {
  static const char* value() 
  {
    return "44784249bb38d42eeaab1675c1e520a3";
  }

  static const char* value(const command_msgs::position_request&) { return value(); } 
};

template<>
struct DataType<command_msgs::position_request> {
  static const char* value() 
  {
    return "command_msgs/position_request";
  }

  static const char* value(const command_msgs::position_request&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<command_msgs::position_requestRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "44784249bb38d42eeaab1675c1e520a3";
  }

  static const char* value(const command_msgs::position_requestRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<command_msgs::position_requestRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "command_msgs/position_request";
  }

  static const char* value(const command_msgs::position_requestRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<command_msgs::position_requestResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "44784249bb38d42eeaab1675c1e520a3";
  }

  static const char* value(const command_msgs::position_requestResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<command_msgs::position_requestResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "command_msgs/position_request";
  }

  static const char* value(const command_msgs::position_requestResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COMMAND_MSGS_SERVICE_POSITION_REQUEST_H

